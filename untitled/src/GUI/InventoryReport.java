package GUI;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

import BusinessLayer.Product;
import DAO.ProductDAO;

import javax.swing.*;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.List;

/**
 *
 * @author Ahmad Khakan
 */
public class InventoryReport extends javax.swing.JFrame {

    /**
     * Creates new form InventoryReport
     */


    List<Product> InventoryList ;
    List<Product> SearchProductList ;
    Product SelectedProduct;

    public InventoryReport() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        BackBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jTextField1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        LowRadioButton = new javax.swing.JRadioButton();
        AverageRadioButton = new javax.swing.JRadioButton();
        GoodRadioButton = new javax.swing.JRadioButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        BackBtn.setText("Back");

        BackBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackBtnActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
                new Object [][] {
                        {null, null, null, null, null, null},
                },
                new String [] {
                        "Code", "Name", "Stock", "Quantity", "Description", "ExpiryDate"
                }
        ));
        jScrollPane1.setViewportView(jTable1);

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Product");

        LowRadioButton.setText("Low");
        LowRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LowRadioButtonActionPerformed(evt);
            }
        });

        AverageRadioButton.setText("Average");
        AverageRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AverageRadioButtonActionPerformed(evt);
            }
        });

        GoodRadioButton.setText("Good");
        GoodRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GoodRadioButtonActionPerformed(evt);
            }
        });

        ButtonGroup group = new ButtonGroup();
        group.add(LowRadioButton);
        group.add(AverageRadioButton);
        group.add(GoodRadioButton);

        jButton2.setText("Search");

        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        //editing
        InventoryList = getProductList();

        SearchProductList = getProductList();


        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        for (Product product : SearchProductList)
        {
            Object[] row = {
                    product.getCode(),
                    product.getName(),
                    product.getStockQuantity(),
                    product.getPrice(),
                    product.getDescription()
            };
            model.addRow(row);
        }

        jTable1.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                if (!e.getValueIsAdjusting()) {
                    int selectedRow = jTable1.getSelectedRow();
                    if (selectedRow != -1) {
                        //Selected Product from inventory
                        SelectedProduct =SearchProductList.get(selectedRow);
                        SelectedProduct.display();

                        //Testfields Registeration
//                        textfieldname.setText(SelectedProduct.getName());
//                        textFieldID.setText(SelectedProduct.getCode());
                        // Row is selected, do something with the selected row index
                        System.out.println("Selected Row Index: " + selectedRow);
                        String code = jTable1.getValueAt(selectedRow, 0).toString();
                        String name = jTable1.getValueAt(selectedRow, 1).toString();
                        System.out.println("Selected Row Data: Code=" + code + ", Name=" + name);
                    }
                }
            }
        });

        //search function of name
        jTextField1.addKeyListener(new KeyAdapter() {
            @Override
            public void keyTyped(KeyEvent e) {
                model.setRowCount(0);
                model.equals(UpdateInventorySearchListbyName(jTextField1.getText()));
                System.out.println("Key typed: " + e.getKeyChar());
            }
        });


        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(72, 72, 72)
                                                .addComponent(BackBtn))
                                        .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addGap(101, 101, 101)
                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                                                .addComponent(AverageRadioButton, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                .addComponent(LowRadioButton, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                        .addGroup(layout.createSequentialGroup()
                                                                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addGap(101, 101, 101)
                                                                .addComponent(GoodRadioButton, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addGap(119, 119, 119)
                                                                .addComponent(jButton2)))
                                                .addGap(18, 18, 18)
                                                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 579, Short.MAX_VALUE)))
                                .addGap(53, 53, 53))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGap(48, 48, 48)
                                .addComponent(BackBtn)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(18, 18, 18)
                                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(47, 47, 47)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(jLabel1))
                                                .addGap(85, 85, 85)
                                                .addComponent(LowRadioButton)
                                                .addGap(27, 27, 27)
                                                .addComponent(AverageRadioButton)
                                                .addGap(18, 18, 18)
                                                .addComponent(GoodRadioButton)
                                                .addGap(43, 43, 43)
                                                .addComponent(jButton2)))
                                .addContainerGap(73, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void LowRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:

    }

    private void AverageRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void GoodRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }
    private void BackBtnActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        dispose();
        ManagerMenu managerMenu = new ManagerMenu();
        managerMenu.setVisible(true);
    }
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        if(LowRadioButton.isSelected())
        {
            SearchProductList.clear();
            for(Product product : InventoryList)
            {
                if(product.getStockQuantity()<=20)
                {
                    SearchProductList.add(product);
                }
            }
        }
        if(AverageRadioButton.isSelected())
        {
            SearchProductList.clear();
            for(Product product : InventoryList)
            {
                if(product.getStockQuantity()<=100 && product.getStockQuantity()>20)
                {
                    SearchProductList.add(product);
                }
            }
        }
        else if(GoodRadioButton.isSelected())
        {
            SearchProductList.clear();
            for(Product product : InventoryList)
            {
                if(product.getStockQuantity()>100)
                {
                    SearchProductList.add(product);
                }
            }
        }

        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0);
        for (Product product : SearchProductList) {
            Object[] row = {
                    product.getCode(),
                    product.getName(),
                    product.getStockQuantity(),
                    product.getPrice(),
                    product.getDescription()
            };
            model.addRow(row);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InventoryReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InventoryReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InventoryReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InventoryReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InventoryReport().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify
    private javax.swing.JRadioButton AverageRadioButton;
    private javax.swing.JButton BackBtn;
    private javax.swing.JRadioButton GoodRadioButton;
    private javax.swing.JRadioButton LowRadioButton;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration


    private List<Product> getProductList() {

        ProductDAO productDAO = new ProductDAO();
        return productDAO.getAllProducts();
    }
    public DefaultTableModel UpdateInventorySearchListbyName(String Search)
    {

        List<Product> temp = new ArrayList<>();

        for(Product product :InventoryList)
        {
            String p = product.getName().toLowerCase();
            String s = Search.toLowerCase();
            if(p.contains(s))
            {
                temp.add(product);
            }
        }
        if(!temp.isEmpty())
        {
            SearchProductList = temp;
            System.out.println("New List");
        }
        else
        {
            SearchProductList = InventoryList;
            System.out.println("Original List");
        }
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0);
        for (Product product : SearchProductList) {
            Object[] row = {
                    product.getCode(),
                    product.getName(),
                    product.getStockQuantity(),
                    product.getPrice(),
                    product.getDescription()
            };
            model.addRow(row);
        }
        return model;
    }
}
