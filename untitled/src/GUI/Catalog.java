package GUI;

import BusinessLayer.Category;
import BusinessLayer.Product;

import javax.swing.table.DefaultTableModel;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
import java.util.List;

/**
 *
 * @author Muhammad Ahmad
 */
public class Catalog extends javax.swing.JFrame {
    Category category = new Category();

    List<Product> DisplayList ;

    Category SelectedCatagory;
    /**
     * Creates new form Catalog
     */
    public Catalog() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        BackBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        CategoryTree = new javax.swing.JTree();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        AddBtn = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        DeleteBtn = new javax.swing.JButton();
        Update = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);


        BackBtn.setText("Back");
        BackBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackBtnActionPerformed(evt);
            }
        });

        AddBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddBtnActionPerformed(evt);
            }
        });
        DeleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteBtnActionPerformed(evt);
            }
        });

        Category mainCategory = category.getCategorybyName("Main Category");
        DefaultMutableTreeNode root = new DefaultMutableTreeNode(mainCategory.getName());
        populateTree(mainCategory, root);
        DefaultTreeModel treeModel = new DefaultTreeModel(root);
        CategoryTree.setModel(treeModel);
        jScrollPane1.setViewportView(CategoryTree);

        // Assuming you have initialized your CategoryTree

        CategoryTree.addTreeSelectionListener(e -> {
            DefaultMutableTreeNode selectedNode = (DefaultMutableTreeNode) CategoryTree.getLastSelectedPathComponent();

            if (selectedNode != null) {
                System.out.println("Null Chek");
                // Get the selected value as a string
                String selectedValue = selectedNode.getUserObject().toString();

                Category category1 = new Category();
                category1=category1.getCategorybyName(selectedValue);
                SelectedCatagory = category1;
                DisplayList = category1.getProducts();

                if(category1!=null)
                {
                    jTextField1.setText(category1.getName());
                    jTextArea1.setText(category1.getDescription());
                }
                DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
                model.setRowCount(0);
                if(!DisplayList.isEmpty()) {
                    for (Product op : DisplayList) {
                        Object[] row = {
                                op.getCode(),
                                op.getName(),
                                op.getStockQuantity(),
                                op.getPrice(),
                                op.getDescription(),
                                op.getExpirydate()
                        };
                        model.addRow(row);
                    }
                }

                System.out.println("Selected value: " + selectedValue);
            }
        });

        jLabel1.setText("Name");

        jLabel2.setText("Description");

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane2.setViewportView(jTextArea1);

        AddBtn.setText("Add");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N

        jLabel3.setText("Category Management");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
                new Object [][] {
                        {null, null, null, null,null,null},

                },
                new String [] {
                        "Code", "Product", "Quantity", "Price" , "Description" , "Expiry"
                }
        ));


        jScrollPane3.setViewportView(jTable1);

        DeleteBtn.setText("Delete");

        Update.setText("Update");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGap(63, 63, 63)
                                .addComponent(BackBtn)
                                .addGap(264, 264, 264)
                                .addComponent(jLabel3)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(91, 91, 91)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                        .addComponent(DeleteBtn))
                                                .addGap(34, 34, 34)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                                                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                .addGap(122, 122, 122))
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addComponent(AddBtn)
                                                                .addGap(38, 38, 38)
                                                                .addComponent(Update)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(29, 29, 29)
                                                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 461, Short.MAX_VALUE)
                                                .addGap(29, 29, 29)))
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 414, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(79, 79, 79))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGap(36, 36, 36)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(BackBtn)
                                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(jLabel1)
                                                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(33, 33, 33)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(jLabel2)
                                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(45, 45, 45)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(AddBtn)
                                                        .addComponent(DeleteBtn)
                                                        .addComponent(Update))
                                                .addGap(18, 18, 18)
                                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 362, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(16, 16, 16))
        );

        pack();
    }// </editor-fold>


    private void DeleteBtnActionPerformed(java.awt.event.ActionEvent evt) {
        if(SelectedCatagory!=null) {
            SelectedCatagory.remove(SelectedCatagory);
            Category mainCategory = category.getCategorybyName("Main Category");
            DefaultMutableTreeNode root = new DefaultMutableTreeNode(mainCategory.getName());
            populateTree(mainCategory, root);
            DefaultTreeModel treeModel = new DefaultTreeModel(root);
            CategoryTree.setModel(treeModel);
            jScrollPane1.setViewportView(CategoryTree);
        }
        else
        {
            DialogueBox.showMessageDialog("Please select first");
        }
    }
    private void AddBtnActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:

        if(!jTextField1.getText().isEmpty() && !jTextArea1.getText().isEmpty()) {
            Category category = new Category();
            category.setName(jTextField1.getText());
            category.setDescription(jTextArea1.getText());
            SelectedCatagory.add(category);

            Category mainCategory = category.getCategorybyName("Main Category");
            DefaultMutableTreeNode root = new DefaultMutableTreeNode(mainCategory.getName());
            populateTree(mainCategory, root);
            DefaultTreeModel treeModel = new DefaultTreeModel(root);
            CategoryTree.setModel(treeModel);
            jScrollPane1.setViewportView(CategoryTree);
        }
        else{
            DialogueBox.showMessageDialog("Missing attributes is written");
        }
    }
    private void BackBtnActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        dispose();
        ManagerMenu managerMenu = new ManagerMenu();
        managerMenu.setVisible(true);
    }

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }
    private void populateTree(Category category, DefaultMutableTreeNode parentNode) {
        for (Category subcategory : category.getSubcategories()) {
            DefaultMutableTreeNode subcategoryNode = new DefaultMutableTreeNode(subcategory.getName());
            parentNode.add(subcategoryNode);

            for (Product product : subcategory.getProducts()) {
                DefaultMutableTreeNode productNode = new DefaultMutableTreeNode(product.getName());
                subcategoryNode.add(productNode);
            }

            populateTree(subcategory, subcategoryNode);
        }
    }


    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Catalog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Catalog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Catalog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Catalog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Catalog().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify
    private javax.swing.JButton AddBtn;
    private javax.swing.JButton BackBtn;
    private javax.swing.JTree CategoryTree;
    private javax.swing.JButton DeleteBtn;
    private javax.swing.JButton Update;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration
}
